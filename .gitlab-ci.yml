#
# stage-1 takes only a few minutes; they do not run the full test suite or external packages.
#
# stage-2 takes less than 10 15 minutes. They run the full test suite but with limited mixture of external packages.
#
# stage-3 may take an hour or more. They run the full test suite and heavily test external packages, utilize valgrind etc.
#
# The stage-(n) tests are only started if all of the stage-(n-1) tests run without error
#   You can limit the testing by using the variable STAGE with value 1 or 2
#

stages:
  - stage-1
  - stage-2
  - stage-3
variables:
  GIT_STRATEGY: fetch
  GIT_CLEAN_FLAGS: -ffdxq
  PETSC_OPTIONS: -check_pointer_intensity 0 -error_output_stdout -nox -nox_warning -malloc_dump
  TIMEOUT: 600

#
# The most basic template that most tests will expand upon. In particular merge requests and branch pushes DO NOT trigger testing
#

.test:
  interruptible: true
  only:
    refs:
#     Set with CI/CD Shedules - New Schedule
      - schedules
#     Set with CI/CD Pipelines - Run Pipeline
      - web
  dependencies: []

#
#  This provides the basic order of operations and options template for cloud based stage 1 tests.
#  Not all test-short need to follow this template but most will.
#

.stage-1:
  extends: .test
  stage: stage-1
  before_script:
    - date
    - hostname
    - grep PRETTY_NAME /etc/os-release
    - nproc
    - lscpu
    - ccache --zero-stats
  script:
    - echo ${PETSC_CONFIG_OPTS}
    - export SLEPC_DIR=$PWD
    - echo -e "section_start:`date +%s`:build_petsc\r\e[0KPETSc configure and make"
    - cd ..
    - if [ ! -d petsc ]; then git clone https://gitlab.com/petsc/petsc.git; fi
    - cd petsc
    - git clean -ffdxq
    - git fetch
    - |
      if [ -z ${PETSC_BRANCH+x} ]; then
        if [ $(awk '/define SLEPC_VERSION_RELEASE/{print $3}' $SLEPC_DIR/include/slepcversion.h) == 1 ];
          then git checkout origin/release;
          else git checkout origin/main;
        fi
      else
        git checkout origin/$PETSC_BRANCH
      fi
    - export PETSC_DIR=$PWD
    - export PETSC_ARCH=arch-$CI_JOB_NAME
    - bash -c "${PYTHON} ./configure --with-debugging=0 --COPTFLAGS='-O -g' --CXXOPTFLAGS='-O -g' --FOPTFLAGS='-O -g' --CUDAOPTFLAGS='-O' ${PETSC_CONFIG_OPTS}"
    - make CFLAGS=-Werror CXXFLAGS=-Werror FFLAGS=-Werror
    - echo -e "section_end:`date +%s`:build_petsc\r\e[0K"
    - echo -e "section_start:`date +%s`:build_slepc\r\e[0KSLEPc configure and make"
    - cd $SLEPC_DIR
    - ${PYTHON} ./configure
    - make CFLAGS=-Werror CXXFLAGS=-Werror FFLAGS=-Werror
    - make CFLAGS=-Werror CXXFLAGS=-Werror FFLAGS=-Werror check
    - |
      if [ ! -z ${CHECKSOURCE+x} ]; then
        make checkbadSource SHELL=bash;
        make check_output SHELL=bash;
        make check_ascii SHELL=bash;
      fi
    - echo -e "section_end:`date +%s`:build_slepc\r\e[0K"
    - echo -e "section_start:`date +%s`:tests_slepc\r\e[0KSLEPc test suite"
    - if [ -z ${DISABLE_TESTS+x} ]; then make CFLAGS=-Werror CXXFLAGS=-Werror FFLAGS=-Werror cleantest allgtests-tap TIMEOUT=${TIMEOUT} ${TEST_OPTS}; fi
    - echo -e "section_end:`date +%s`:tests_slepc\r\e[0K"
  after_script:
    - date
  artifacts:
    reports:
      junit: arch-*/tests/testresults.xml
    name: "$CI_JOB_NAME"
    when: always
    paths:
    - arch-*/lib/slepc/conf/*.log
    - arch-*/lib/pkgconfig/slepc.pc
    - arch-*/tests/testresults.xml
    - arch-*/tests/test_*_tap.log
    - arch-*/tests/test_*_err.log
    expire_in: 4 days

#
# The following tests run as part of stage-1.
#

gnu-c-single-nofort:
  extends: .stage-1
  tags:
    - linux-ubuntu, name:athor
  variables:
    PETSC_CONFIG_OPTS: --with-fc=0 --with-precision=single --download-sowing
    TEST_OPTS: search=eps_tests-test10_1

gnu-cxx-complex-nofort:
  extends: .stage-1
  tags:
    - linux-ubuntu, name:maat
  variables:
    PYTHON: python3
    PETSC_CONFIG_OPTS: --with-fc=0 --with-clanguage=cxx --with-scalar-type=complex
    TEST_OPTS: search=eps_tests-test10_1

gnu-c-complex-nompi-int64:
  extends: .stage-1
  tags:
    - linux-ubuntu, name:ahmes
  variables:
    PETSC_CONFIG_OPTS: --with-mpi=0 --with-fc=0 --with-scalar-type=complex --with-64-bit-indices
    DISABLE_TESTS: 1

gnu-c99-mlib-static:
  extends: .stage-1
  tags:
    - linux-fedora
  variables:
    PETSC_CONFIG_OPTS: --with-single-library=0 --with-shared-libraries=0 --CFLAGS=-std=c99
    TEST_OPTS: search=eps_tests-test10_1
    CHECKSOURCE: 1

#
# This provides the basic order of operations and options template for stage-2,3 tests.
# Not all stage-2,3 need to follow this template, but most will.
#
.stage-23:
  extends: .test
  script:
    - echo $PATH
    - echo $PETSC_OPTIONS
    - echo ${PETSC_CONFIG_OPTS}
    - echo ${SLEPC_CONFIG_OPTS}
    - source /opt/intel/oneapi/compiler/latest/env/vars.sh || source /opt/intel/bin/compilervars.sh intel64 || true
    - export SLEPC_DIR=$PWD
    - echo -e "section_start:`date +%s`:build_petsc\r\e[0KPETSc configure and make"
    - cd ..
    - if [ ! -z ${INSTALL+x} ]; then export INSTALL_DIR=$PWD/install; rm -rf $INSTALL_DIR; fi
    - if [ ! -d petsc ]; then git clone https://gitlab.com/petsc/petsc.git; fi
    - cd petsc
    - git clean -ffdxq
    - git fetch
    - |
      if [ -z ${PETSC_BRANCH+x} ]; then
        if [ $(awk '/define SLEPC_VERSION_RELEASE/{print $3}' $SLEPC_DIR/include/slepcversion.h) == 1 ];
          then git checkout origin/release;
          else git checkout origin/main;
        fi
      else
        git checkout origin/$PETSC_BRANCH
      fi
    - export PETSC_DIR=$PWD
    - export PETSC_ARCH=arch-$CI_JOB_NAME
    - bash -c "${PYTHON} ./configure --with-debugging=0 --COPTFLAGS='-O -g' --CXXOPTFLAGS='-O -g' --FOPTFLAGS='-O -g' --CUDAOPTFLAGS='-O' ${PETSC_CONFIG_OPTS}"
    - make CFLAGS="${MAKE_CFLAGS}" CXXFLAGS="${MAKE_CXXFLAGS}" FFLAGS="${MAKE_FFLAGS}"
    - if [ ! -z ${SLEPC4PY+x} ]; then export PYTHONPATH=$PETSC_DIR/$PETSC_ARCH/lib; echo $PYTHONPATH; fi
    - if [ ! -z ${INSTALL+x} ]; then make install; PETSC_DIR=$INSTALL_DIR; unset PETSC_ARCH; fi
    - echo -e "section_end:`date +%s`:build_petsc\r\e[0K"
    - echo -e "section_start:`date +%s`:build_slepc\r\e[0KSLEPc configure and make"
    - cd $SLEPC_DIR
    - ${PYTHON} ./configure ${SLEPC_CONFIG_OPTS}
    - make CFLAGS="${MAKE_CFLAGS}" CXXFLAGS="${MAKE_CXXFLAGS}" FFLAGS="${MAKE_FFLAGS}"
    - if [ ! -z ${INSTALL+x} ]; then make install; SLEPC_DIR=$INSTALL_DIR; fi
    - make CFLAGS="${MAKE_CFLAGS}" CXXFLAGS="${MAKE_CXXFLAGS}" FFLAGS="${MAKE_FFLAGS}" check
    - if [ ! -z ${BUILD_DOCS+x} ]; then make alldoc LOC=$SLEPC_DIR; tar czf ${CI_JOB_NAME}-docs.tar.gz --exclude "*.out" --exclude "makefile*" --exclude "ftn-*" --exclude slepc4py docs include src; fi
    - if [ ! -z ${BUILD_DOCS+x} ] && [ ! -z ${SLEPC4PY+x} ]; then make -C src/binding/slepc4py rst2html sphinx-html sphinx-pdf PYTHON=${PYTHON}; tar czf ${CI_JOB_NAME}-docs-py.tar.gz -C src/binding/slepc4py docs; fi
    - echo -e "section_end:`date +%s`:build_slepc\r\e[0K"
    - echo -e "section_start:`date +%s`:tests_slepc\r\e[0KSLEPc test suite"
    - if [ ! -z ${SLEPC4PY+x} ]; then make slepc4pytest; fi
    - if [ -z ${DISABLE_TESTS+x} ]; then make CFLAGS="${MAKE_CFLAGS}" CXXFLAGS="${MAKE_CXXFLAGS}" FFLAGS="${MAKE_FFLAGS}" cleantest allgtests-tap TIMEOUT=${TIMEOUT} ${TEST_OPTS}; fi
    - if [ ! -z ${COVERAGE+x} ]; then lcov --capture --directory $SLEPC_DIR/$PETSC_ARCH/obj --output-file coverage.info; genhtml coverage.info --legend --title SLEPc --output-directory coverage; tar czf ${CI_JOB_NAME}-cov.tar.gz coverage; fi
    - echo -e "section_end:`date +%s`:tests_slepc\r\e[0K"
  artifacts:
    reports:
      junit: arch-*/tests/testresults.xml
    name: "$CI_JOB_NAME"
    when: always
    paths:
    - arch-*/lib/slepc/conf/*.log
    - arch-*/lib/pkgconfig/slepc.pc
    - arch-*/tests/testresults.xml
    - arch-*/tests/test_*_tap.log
    - arch-*/tests/test_*_err.log
    - ${CI_JOB_NAME}-cov.tar.gz
    - ${CI_JOB_NAME}-docs*.tar.gz
    expire_in: 4 days
  variables:
    OPENBLAS_NUM_THREADS: 1

.stage-2:
  extends: .stage-23
  stage: stage-2
  only:
    variables:
      - $STAGE != "1"
      - $STAGE != "3"

.stage-3:
  extends: .stage-23
  stage: stage-3
  only:
    variables:
      - $STAGE != "1"
      - $STAGE != "2"

.stage-3-sched:
  extends: .stage-3
  only:
    - schedules

#
# The following provide templates for various OSes for pre/post info
#

.linux_test_noflags:
  before_script:
    - date
    - hostname
    - grep PRETTY_NAME /etc/os-release
    - nproc
    - lscpu
    - ccache --zero-stats
  after_script:
    - date
    - ccache --show-stats

.linux_test_nofflags:
  extends: .linux_test_noflags
  variables:
    MAKE_CFLAGS: -Werror
    MAKE_CXXFLAGS: -Werror

.linux_test:
  extends: .linux_test_noflags
  variables:
    MAKE_CFLAGS: -Werror
    MAKE_CXXFLAGS: -Werror
    MAKE_FFLAGS: -Werror

.freebsd_test:
  variables:
    MAKE_CFLAGS: -Werror
    MAKE_CXXFLAGS: -Werror
    MAKE_FFLAGS: -Werror
  before_script:
    - date
    - hostname
    - freebsd-version
    - echo $(sysctl -n hw.ncpu)
    - ccache --zero-stats
  after_script:
    - date
    - ccache --show-stats

.osx_test:
  variables:
    MAKE_CFLAGS: -Werror
    MAKE_CXXFLAGS: -Werror
    MAKE_FFLAGS: -Werror
  before_script:
    - date
    - hostname
    - sw_vers -productVersion
    - echo $(sysctl -n hw.ncpu)
    - ccache --zero-stats
  after_script:
    - date
    - ccache --show-stats

.opensolaris_test:
  before_script:
    - date
    - hostname
    - uname -a
    - nproc
    - isainfo -x
  after_script:
    - date

.mswin_test:
  before_script:
    - date
    - hostname
    - uname -a
    - nproc
  after_script:
    - date

#
# The following tests run as part of stage-2.
#
# The tags variable used in the tests below connects the particular test with the runners
# listed on the left hand side of https://gitlab.com/slepc/slepc/-/settings/ci_cd.
#

gnu-cxx-complex:
  extends:
    - .stage-2
    - .linux_test
  tags:
    - linux-debian
  variables:
    PYTHON: python2
    PETSC_CONFIG_OPTS: --with-clanguage=C++ --with-scalar-type=complex --with-fortran-bindings=0 --download-sowing
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --with-arpack-dir=/usr/local/opt/arpack-ng-3.8.0 --with-primme-dir=/usr/local/opt/primme-3.2 --with-blopex-dir=/usr/local/opt/blopex

gnu-c-cuda:
  extends:
    - .stage-2
    - .linux_test
  tags:
    - linux-ubuntu, gpu:nvidia
  variables:
    PETSC_CONFIG_OPTS: --with-fortran-bindings=0 --with-cuda --with-openmp --download-mumps --download-scalapack --download-metis --download-parmetis --with-magma-dir=/usr/local/opt/magma-2.5.4
    PETSC_OPTIONS: -check_pointer_intensity 0 -error_output_stdout -nox -nox_warning -malloc_dump -use_gpu_aware_mpi 0

clang-c:
  extends:
    - .stage-2
    - .linux_test
  tags:
    - linux-ubuntu, compiler:clang
  variables:
    PETSC_CONFIG_OPTS: --with-cc=/opt/mpich/3.3.2-clang/bin/mpicc --with-cxx=/opt/mpich/3.3.2-clang/bin/mpicxx --with-fc=0 --with-mpiexec=/opt/mpich/3.3.2-clang/bin/mpiexec --download-sowing
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --with-packages-download-dir=/var/local/downloads --with-primme-dir=/usr/local/opt/primme-3.2 --download-blopex

gnu-c-complex-multilib:
  extends:
    - .stage-2
    - .linux_test
  tags:
    - linux-ubuntu, name:maat
  variables:
    PETSC_CONFIG_OPTS: --with-scalar-type=complex --with-single-library=0 --with-fortran-bindings=0 --download-sowing --download-elemental --download-metis --download-parmetis --download-scalapack
    SLEPC_CONFIG_OPTS: --download-elpa

intel-c-complex-mkl:
  extends:
    - .stage-2
    - .linux_test
  tags:
    - linux-fedora, compiler:intel
  variables:
    MAKE_FFLAGS: ''
    PETSC_CONFIG_OPTS: --with-scalar-type=complex --with-cc=/opt/mpich/3.3.2-intel/bin/mpicc --with-fc=/opt/mpich/3.3.2-intel/bin/mpifort --with-cxx=/opt/mpich/3.3.2-intel/bin/mpicxx --with-mpiexec=/opt/mpich/3.3.2-intel/bin/mpiexec --with-blaslapack-dir=/opt/intel/oneapi/mkl/latest --with-mkl_pardiso=1 --with-scalapack=1
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --with-packages-download-dir=/var/local/downloads --download-arpack --download-primme --download-blopex --with-feast=0

#
# The following tests run as part of stage-3.
#

gnu-c-multilib:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - linux-debian
  variables:
    PYTHON: python2
    PETSC_CONFIG_OPTS: --with-single-library=0 --download-scalapack
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --download-arpack --with-primme-dir=/usr/local/opt/primme-2.1 --with-blopex-dir=/usr/local/opt/blopex --with-blzpack-dir=/usr/local/opt/blzpack --with-trlan-dir=/usr/local/opt/trlan-201009 --with-slicot --with-packages-download-dir=/var/local/downloads

gnu-c-complex:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - linux-fedora
  variables:
    PETSC_CONFIG_OPTS: --with-scalar-type=complex --with-petsc4py
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --download-arpack --download-primme --download-blopex --with-packages-download-dir=/var/local/downloads --with-slepc4py
    SLEPC4PY: 1

gnu-cxx-int64:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - compiler:intel
  variables:
    PETSC_CONFIG_OPTS: --with-clanguage=C++ --with-64-bit-indices --with-blaslapack-dir=/opt/intel/oneapi/mkl/latest
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --with-primme-dir=/usr/local/opt/primme-3.2

gnu-c-single:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - linux-ubuntu
  variables:
    PETSC_CONFIG_OPTS: --with-precision=single --download-scalapack
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --with-arpack-dir=/usr/local/opt/arpack-ng-3.8.0

gnu-c:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - linux-ubuntu, name:maat
  variables:
    PETSC_CONFIG_OPTS: --download-superlu_dist --download-elemental --download-metis --download-parmetis --with-petsc4py --download-c2html
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --with-arpack-dir=/usr/local/opt/arpack-ng-3.8.0 --with-primme-dir=/usr/local/opt/primme-3.2 --download-blopex --with-slepc4py
    SLEPC4PY: 1
    BUILD_DOCS: 1

gnu-c-c99-nompi:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - linux-debian
  variables:
    PETSC_CONFIG_OPTS: --CFLAGS='-std=c99 -pedantic -Wno-long-long -Wno-overlength-strings' --with-fortran-bindings=0 --download-sowing --with-mpi=0
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --with-arpack-lib=/usr/local/opt/ARPACK/libparpack.a,/usr/local/opt/ARPACK/libarpack.a,-lgfortran,-lmpi_usempif08,-lmpi_usempi_ignore_tkr,-lmpi_mpifh,-lmpi --with-blopex-dir=/usr/local/opt/blopex --with-trlan-dir=/usr/local/opt/trlan-201009 --with-packages-download-dir=/var/local/downloads --download-primme --download-primme-cflags=-std=c99

gnu-c-coverage:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - linux-ubuntu
  variables:
    PETSC_CONFIG_OPTS: --with-fortran-bindings=0 --with-debugging=1 --with-gcov=1 --CXXFLAGS='-O -g -std=c++11' --with-cxx-dialect=C++11
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --download-arpack --download-primme --download-trlan=https://codeforge.lbl.gov/frs/download.php/210/trlan-201009.tar.gz --download-blopex --download-hpddm
    COVERAGE: 1

gnu-c-complex-coverage:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - linux-ubuntu
  variables:
    PETSC_CONFIG_OPTS: --with-fortran-bindings=0 --with-scalar-type=complex --with-debugging=1 --with-gcov=1
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --with-packages-download-dir=/var/local/downloads --with-arpack-dir=/usr/local/opt/arpack-ng-3.8.0 --with-primme-dir=/usr/local/opt/primme-3.2 --download-blopex --download-hpddm
    COVERAGE: 1

gnu-c-cuda-complex:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - linux-ubuntu, gpu:nvidia
  variables:
    PETSC_CONFIG_OPTS: --with-scalar-type=complex --with-cuda --with-openmp --download-thrust --with-magma-dir=/usr/local/opt/magma-2.5.4
    PETSC_OPTIONS: -check_pointer_intensity 0 -error_output_stdout -nox -nox_warning -malloc_dump -use_gpu_aware_mpi 0
    TEST_OPTS: -j1 query=requires queryval=cuda

gnu-c-cuda-single:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - linux-ubuntu, gpu:nvidia
  variables:
    PETSC_CONFIG_OPTS: --with-precision=single --with-single-library=0 --with-cuda --with-openmp
    PETSC_OPTIONS: -check_pointer_intensity 0 -error_output_stdout -nox -nox_warning -malloc_dump -use_gpu_aware_mpi 0
    TEST_OPTS: -j1 query=requires queryval=cuda

intel-c-complex-int64-mkl:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - compiler:intel
  variables:
    MAKE_FFLAGS: ''
    PETSC_CONFIG_OPTS: --with-scalar-type=complex --with-cc=/opt/mpich/3.3.2-intel/bin/mpicc --with-fc=/opt/mpich/3.3.2-intel/bin/mpifort --with-cxx=/opt/mpich/3.3.2-intel/bin/mpicxx --with-mpiexec=/opt/mpich/3.3.2-intel/bin/mpiexec --with-blaslapack-dir=/opt/intel/oneapi/mkl/latest --with-mkl_pardiso=1 --with-64-bit-indices --with-64-bit-blas-indices
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --with-feast=0

clang-c-valgrind:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - linux-fedora, compiler:clang
  variables:
    PETSC_CONFIG_OPTS: --with-cc=/opt/mpich/3.3.2-clang/bin/mpicc --with-cxx=/opt/mpich/3.3.2-clang/bin/mpicxx --with-fc=0 --with-mpiexec=/opt/mpich/3.3.2-clang/bin/mpiexec --with-shared-libraries=0 --download-sowing
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local

gnu-c-float128:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - linux-ubuntu
  variables:
    PETSC_CONFIG_OPTS: --download-f2cblaslapack --with-precision=__float128
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local

nvidia-c-nompi:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - compiler:nvidia
  variables:
    MAKE_CFLAGS: ''
    MAKE_CXXFLAGS: ''
    MAKE_FFLAGS: ''
    PETSC_CONFIG_OPTS: --with-cc=/opt/nvidia/hpc_sdk/Linux_x86_64/20.9/compilers/bin/pgcc --with-fc=/opt/nvidia/hpc_sdk/Linux_x86_64/20.9/compilers/bin/pgfortran --with-cxx=/opt/nvidia/hpc_sdk/Linux_x86_64/20.9/compilers/bin/pgc++ --with-blaslapack-dir=/opt/nvidia/hpc_sdk/Linux_x86_64/20.9/compilers/lib --with-mpi=0
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --with-packages-download-dir=/var/local/downloads --download-blopex --download-primme=/var/local/downloads/primme-3.2.tar.gz

intel-cxx-mkl:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - compiler:intel
  variables:
    MAKE_FFLAGS: ''
    PETSC_CONFIG_OPTS: --with-cc=/opt/mpich/3.3.2-intel/bin/mpicc --with-fc=/opt/mpich/3.3.2-intel/bin/mpifort --with-cxx=/opt/mpich/3.3.2-intel/bin/mpicxx --with-mpiexec=/opt/mpich/3.3.2-intel/bin/mpiexec --with-blaslapack-dir=/opt/intel/oneapi/mkl/latest --with-mkl_pardiso=1 --with-scalapack=1 --with-clanguage=C++
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local

gnu-cxx-complex-int64:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - linux-ubuntu
  variables:
    PETSC_CONFIG_OPTS: --with-clanguage=C++ --with-scalar-type=complex --with-64-bit-indices --download-scalapack --download-elemental --download-parmetis --download-metis --download-mumps
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --with-packages-download-dir=/var/local/downloads --download-primme --download-hpddm

#
# The following tests run as part of stage-3, but only in scheduled pipelines.
#

clang-c-complex-valgrind:
  extends:
    - .stage-3-sched
    - .linux_test
  tags:
    - linux-fedora, compiler:clang
  variables:
    PETSC_CONFIG_OPTS: --with-cc=/opt/mpich/3.3.2-clang/bin/mpicc --with-cxx=/opt/mpich/3.3.2-clang/bin/mpicxx --with-fc=0 --with-mpiexec=/opt/mpich/3.3.2-clang/bin/mpiexec --with-scalar-type=complex --with-shared-libraries=0 --download-sowing
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local

intel-c-mkl:
  extends:
    - .stage-3-sched
    - .linux_test
  tags:
    - compiler:intel
  variables:
    MAKE_FFLAGS: ''
    PETSC_CONFIG_OPTS: --with-cc=/opt/mpich/3.3.2-intel/bin/mpicc --with-fc=/opt/mpich/3.3.2-intel/bin/mpifort --with-cxx=/opt/mpich/3.3.2-intel/bin/mpicxx --with-mpiexec=/opt/mpich/3.3.2-intel/bin/mpiexec --with-blaslapack-dir=/opt/intel/oneapi/mkl/latest --with-mkl_pardiso=1 --with-scalapack=1 --download-mumps --download-metis --download-parmetis
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --with-packages-download-dir=/var/local/downloads --download-elpa

nvidia-c-complex-nompi:
  extends:
    - .stage-3-sched
    - .linux_test
  tags:
    - compiler:nvidia
  variables:
    MAKE_CFLAGS: ''
    MAKE_CXXFLAGS: ''
    MAKE_FFLAGS: ''
    PETSC_CONFIG_OPTS: --with-cc=/opt/nvidia/hpc_sdk/Linux_x86_64/20.9/compilers/bin/pgcc --with-fc=/opt/nvidia/hpc_sdk/Linux_x86_64/20.9/compilers/bin/pgfortran --with-cxx=/opt/nvidia/hpc_sdk/Linux_x86_64/20.9/compilers/bin/pgc++ --with-blaslapack-dir=/opt/nvidia/hpc_sdk/Linux_x86_64/20.9/compilers/lib --with-scalar-type=complex --with-mpi=0
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --with-packages-download-dir=/var/local/downloads --download-blopex --download-primme

intel-c-mkl-install:
  extends:
    - .stage-3-sched
    - .linux_test
  tags:
    - compiler:intel
  variables:
    MAKE_FFLAGS: ''
    PETSC_CONFIG_OPTS: --with-cc=/opt/mpich/3.3.2-intel/bin/mpicc --with-fc=/opt/mpich/3.3.2-intel/bin/mpifort --with-cxx=/opt/mpich/3.3.2-intel/bin/mpicxx --with-mpiexec=/opt/mpich/3.3.2-intel/bin/mpiexec --with-blaslapack-dir=/opt/intel/oneapi/mkl/latest --with-mkl_pardiso=1 --with-scalapack=1 --prefix=../install
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --prefix=../install
    INSTALL: 1

clang-c-single:
  extends:
    - .stage-3-sched
    - .linux_test
  tags:
    - compiler:clang
  variables:
    PETSC_CONFIG_OPTS: --with-cc=/opt/mpich/3.3.2-clang/bin/mpicc --with-cxx=/opt/mpich/3.3.2-clang/bin/mpicxx --with-fc=0 --with-mpiexec=/opt/mpich/3.3.2-clang/bin/mpiexec --download-sowing --with-precision=single
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --with-packages-download-dir=/var/local/downloads --download-primme

gnu-c-complex-single:
  extends:
    - .stage-3-sched
    - .linux_test
  tags:
    - compiler:clang
  variables:
    PETSC_CONFIG_OPTS: --with-precision=single --with-scalar-type=complex
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --with-packages-download-dir=/var/local/downloads --download-primme --download-arpack

