#
# stage-1 take only a few minutes and generally run on the cloud; they do not run the full test suite or external packages.
#
# stage-2 runs on MCS systems and may take 10 to 15 minutes. They run the full test suite but with limited mixture of external packages
#
# stage-3 runs on MCS systems and may take an hour or more. They run the full test suite and heavily test external packages, utilize valgrind etc
#         (not yet implemented)
#
# The stage-(n) tests are only started if all of the stage-(n-1) tests run without error
#   You can limit the testing by using the variable STAGE with value 1 or 2
#
# By default the test branch is merged to master before testing. (not yet implemented)
#   You can limite this by using the variable MERGETOMASTER with value 0 (not yet implemented)
#

stages:
  - stage-1
  - stage-2
  - stage-3
variables:
  GIT_STRATEGY: fetch
  GIT_CLEAN_FLAGS: -ffdxq
  PETSC_OPTIONS: -check_pointer_intensity 0 -error_output_stdout -nox -nox_warning -malloc_dump
  TIMEOUT: 600

#
# The most basic template that most tests will expand upon. In particular merge requests and branch pushes DO NOT trigger testing
#

.test:
  only:
    refs:
#     Set with CI/CD Shedules - New Schedule
      - schedules
#     Set with CI/CD Pipelines - Run Pipeline
      - web
  dependencies: []

#
#  This provides the basic order of operations and options template for cloud based stage 1 tests.
#  Not all test-short need to follow this template but most will.
#

.stage-1:
  extends: .test
  stage: stage-1
  image: jedbrown/mpich-ccache
  tags:
    - docker
  before_script:
    - date
    - nproc
    - lscpu
    - echo PETSC_CONFIG_OPTS=${PETSC_CONFIG_OPTS}
  script:
    - export SLEPC_DIR=$PWD
    - echo -e "section_start:`date +%s`:build_petsc\r\e[0KPETSc configure and make"
    - cd ..
    - |
      if [ -z ${PETSC_BRANCH+x} ];
      then
        if [ $(awk '/define SLEPC_VERSION_RELEASE/{print $3}' $SLEPC_DIR/include/slepcversion.h) == 1 ];
        then
          if [ ! -d petsc ]; then git clone --depth 1 --branch maint https://gitlab.com/petsc/petsc.git; fi
        else
          if [ ! -d petsc ]; then git clone --depth 1 --branch master https://gitlab.com/petsc/petsc.git; fi
        fi
      else
        if [ ! -d petsc ]; then git clone --depth 1 --branch $PETSC_BRANCH https://gitlab.com/petsc/petsc.git; fi
      fi
    - cd petsc
    - export PETSC_DIR=$PWD
    - ${PYTHON} ./configure --with-debugging=0 COPTFLAGS='-O -march=native' CXXOPTFLAGS='-O -march=native' FOPTFLAGS='-O -march=native' ${PETSC_CONFIG_OPTS}
    - make allfortranstubs
    - make CFLAGS=-Werror CXXFLAGS=-Werror FFLAGS=-Werror
    - echo -e "section_end:`date +%s`:build_petsc\r\e[0K"
    - echo -e "section_start:`date +%s`:build_slepc\r\e[0KSLEPc configure and make"
    - export PETSC_ARCH=`ls -d arch-*`
    - cd $SLEPC_DIR
    - ${PYTHON} ./configure
    - make CFLAGS=-Werror CXXFLAGS=-Werror FFLAGS=-Werror
    - echo -e "section_end:`date +%s`:build_slepc\r\e[0K"
    - echo -e "section_start:`date +%s`:tests_slepc\r\e[0KSLEPc test suite"
    - make CFLAGS=-Werror CXXFLAGS=-Werror FFLAGS=-Werror allgtests-tap search="${TEST_SEARCH}" TIMEOUT=${TIMEOUT}
    - echo -e "section_end:`date +%s`:tests_slepc\r\e[0K"
  after_script:
    - date
  artifacts:
    reports:
      junit: arch-*/tests/testresults.xml
    name: "$CI_JOB_NAME"
    when: always
    paths:
    - arch-*/lib/slepc/conf/*.log
    - arch-*/lib/pkgconfig/slepc.pc
    - arch-*/tests/testresults.xml
    - arch-*/tests/test_*_tap.log
    - arch-*/tests/test_*_err.log
    expire_in: 4 days

#
# The following tests run on the cloud as part of stage-1.
#

mpich-cxx-py3:
  extends: .stage-1
  variables:
    PYTHON: python3
    PETSC_CONFIG_OPTS: --with-mpi-dir=/usr/local --with-clanguage=cxx --with-fc=0 --download-sowing
    TEST_SEARCH: eps_tests-test10_1

uni-complex-float-int64:
  extends: .stage-1
  variables:
    PYTHON: python3
    PETSC_CONFIG_OPTS: --with-mpi=0 --with-scalar-type=complex --with-precision=single --with-64-bit-indices
    TEST_SEARCH: pep_tests-test1_1

c99-mlib-static-py2:
  extends: .stage-1
  image: jedbrown/mpich-ccache:python2
  variables:
    PYTHON: python2
    PETSC_CONFIG_OPTS: --with-mpi-dir=/usr/local --with-single-library=0 --with-visibility=1 --with-shared-libraries=0 --CFLAGS=-std=c99
    TEST_SEARCH: sys_classes_bv_tests-test2_1

checksource:
  extends: .test
  image: jedbrown/mpich-ccache
  stage: stage-1
  tags:
    - docker
  before_script:
    - date
  script:
    - export SLEPC_DIR=$PWD
    - echo -e "section_start:`date +%s`:build_petsc\r\e[0KPETSc configure and make"
    - cd ..
    - |
      if [ -z ${PETSC_BRANCH+x} ];
      then
        if [ $(awk '/define SLEPC_VERSION_RELEASE/{print $3}' $SLEPC_DIR/include/slepcversion.h) == 1 ];
        then
          if [ ! -d petsc ]; then git clone --depth 1 --branch maint https://gitlab.com/petsc/petsc.git; fi
        else
          if [ ! -d petsc ]; then git clone --depth 1 --branch master https://gitlab.com/petsc/petsc.git; fi
        fi
      else
        if [ ! -d petsc ]; then git clone --depth 1 --branch $PETSC_BRANCH https://gitlab.com/petsc/petsc.git; fi
      fi
    - cd petsc
    - export PETSC_DIR=$PWD
    - python3 ./configure --with-mpi=0 --with-fc=0 --with-cxx=0 --download-sowing
    - make allfortranstubs
    - make
    - echo -e "section_end:`date +%s`:build_petsc\r\e[0K"
    - export PETSC_ARCH=`ls -d arch-*`
    - cd $SLEPC_DIR
    - python3 ./configure
    - make checkbadSource_slepc SHELL=bash
    - make check_output SHELL=bash
    - make check_ascii SHELL=bash
  after_script:
    - date

#
# This provides the basic order of operations and options template for stage-2,3 tests.
# Not all stage-2,3 need to follow this template, but most will.
#
.stage-23:
  extends: .test
  script:
    - printf "PATH:$PATH\n"
    - printf "PETSC_OPTIONS:$PETSC_OPTIONS\n"
    - printf "PETSC_CONFIG_OPTS=${PETSC_CONFIG_OPTS}\n"
    - printf "SLEPC_CONFIG_OPTS=${SLEPC_CONFIG_OPTS}\n"
    - source /opt/intel/bin/compilervars.sh intel64 || true
    - export SLEPC_DIR=$PWD
    - echo -e "section_start:`date +%s`:build_petsc\r\e[0KPETSc configure and make"
    - cd ..
    - if [ ! -d petsc ]; then git clone https://gitlab.com/petsc/petsc.git; fi
    - cd petsc
    - git fetch
    - |
      if [ -z ${PETSC_BRANCH+x} ];
      then
        if [ $(awk '/define SLEPC_VERSION_RELEASE/{print $3}' $SLEPC_DIR/include/slepcversion.h) == 1 ];
          then git checkout origin/maint;
          else git checkout origin/master;
        fi
      else
        git checkout origin/$PETSC_BRANCH
      fi
    - export PETSC_DIR=$PWD
    - export PETSC_ARCH=arch-$CI_JOB_NAME
    - bash -c "${PYTHON} ./configure --with-debugging=0 --COPTFLAGS='-O -g' --CXXOPTFLAGS='-O -g' --FOPTFLAGS='-O -g' --CUDAOPTFLAGS='-O' --CUDAFLAGS='-ccbin gcc-5' ${PETSC_CONFIG_OPTS}"
    - make allfortranstubs
    - make CFLAGS=${MAKE_CFLAGS} CXXFLAGS=${MAKE_CXXFLAGS} FFLAGS=${MAKE_FFLAGS}
    - echo -e "section_end:`date +%s`:build_petsc\r\e[0K"
    - echo -e "section_start:`date +%s`:build_slepc\r\e[0KSLEPc configure and make"
    - cd $SLEPC_DIR
    - ${PYTHON} ./configure ${SLEPC_CONFIG_OPTS}
    - make CFLAGS=${MAKE_CFLAGS} CXXFLAGS=${MAKE_CXXFLAGS} FFLAGS=${MAKE_FFLAGS}
    - make CFLAGS=${MAKE_CFLAGS} CXXFLAGS=${MAKE_CXXFLAGS} FFLAGS=${MAKE_FFLAGS} check
    - echo -e "section_end:`date +%s`:build_slepc\r\e[0K"
    - echo -e "section_start:`date +%s`:tests_slepc\r\e[0KSLEPc test suite"
    - if [ -z ${DISABLE_TESTS+x} ]; then make CFLAGS=${MAKE_CFLAGS} CXXFLAGS=${MAKE_CXXFLAGS} FFLAGS=${MAKE_FFLAGS} cleantest allgtests-tap TIMEOUT=${TIMEOUT}; fi
    - echo -e "section_end:`date +%s`:tests_slepc\r\e[0K"
  artifacts:
    reports:
      junit: arch-*/tests/testresults.xml
    name: "$CI_JOB_NAME"
    when: always
    paths:
    - arch-*/lib/slepc/conf/*.log
    - arch-*/lib/pkgconfig/slepc.pc
    - arch-*/tests/testresults.xml
    - arch-*/tests/test_*_tap.log
    - arch-*/tests/test_*_err.log
    expire_in: 4 days
  variables:
    OPENBLAS_NUM_THREADS: 1

.stage-2:
  extends: .stage-23
  stage: stage-2
  only:
    variables:
      - $STAGE != "1"
      - $STAGE != "3"

.stage-3:
  extends: .stage-23
  stage: stage-3
  only:
    variables:
      - $STAGE != "1"
      - $STAGE != "2"

#
# The following provide templates for various OSes for pre/post info
#

.linux_test_noflags:
  before_script:
    - date
    - hostname
    - grep PRETTY_NAME /etc/os-release
    - echo $(nproc)
    - ccache --zero-stats
  after_script:
    - date
    - ccache --show-stats

.linux_test:
  extends: .linux_test_noflags
  variables:
    MAKE_CFLAGS: -Werror
    MAKE_CXXFLAGS: -Werror
    MAKE_FFLAGS: -Werror

.freebsd_test:
  variables:
    MAKE_CFLAGS: -Werror
    MAKE_CXXFLAGS: -Werror
    MAKE_FFLAGS: -Werror
  before_script:
    - date
    - hostname
    - freebsd-version
    - echo $(sysctl -n hw.ncpu)
    - ccache --zero-stats
  after_script:
    - date
    - ccache --show-stats

.osx_test:
  variables:
    MAKE_CFLAGS: -Werror
    MAKE_CXXFLAGS: -Werror
    MAKE_FFLAGS: -Werror
  before_script:
    - date
    - hostname
    - sw_vers -productVersion
    - echo $(sysctl -n hw.ncpu)
    - ccache --zero-stats
  after_script:
    - date
    - ccache --show-stats

.opensolaris_test:
  before_script:
    - date
    - hostname
    - uname -a
    - echo $(nproc)
  after_script:
    - date

.mswin_test:
  before_script:
    - date
    - hostname
    - uname -a
    - echo $(nproc)
  after_script:
    - date

#
# The following tests run as part of stage-2.
#
# The tags variable used in the tests below connects the particular test with the runners
# listed on the left hand side of https://gitlab.com/slepc/slepc/-/settings/ci_cd.
#

gnu-cxx-complex:
  extends:
    - .stage-2
    - .linux_test
  tags:
    - linux-debian
  variables:
    PETSC_CONFIG_OPTS: --with-clanguage=C++ --with-scalar-type=complex --with-fortran-bindings=0 --download-sowing
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --with-arpack-dir=/usr/local/opt/arpack-ng-3.7.0 --with-primme-dir=/usr/local/opt/primme-3.1.1 --with-blopex-dir=/usr/local/opt/blopex

gnu-c-multilib:
  extends:
    - .stage-2
    - .linux_test
  tags:
    - linux-debian
  variables:
    PETSC_CONFIG_OPTS: --with-single-library=0 --with-visibility=1 --download-scalapack
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --download-arpack --with-primme-dir=/usr/local/opt/primme-2.1 --with-blopex-dir=/usr/local/opt/blopex --with-blzpack-dir=/usr/local/opt/blzpack --with-trlan-dir=/usr/local/opt/trlan-201009 --with-slicot --with-packages-download-dir=/var/local/downloads

#intel-c-complex-mkl:
#  extends:
#    - .stage-2
#    - .linux_test
#  tags:
#    - linux-debian
#  variables:
#    MAKE_FFLAGS: ''
#    PETSC_CONFIG_OPTS: --with-cc=/opt/mpich/3.3.2-intel/bin/mpicc --with-fc=/opt/mpich/3.3.2-intel/bin/mpifort --with-cxx=0 --with-blaslapack-dir=/opt/intel/mkl/ --with-mkl_pardiso=1 --with-scalar-type=complex
#    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local

#

gnu-c-cuda:
  extends:
    - .stage-2
    - .linux_test
  tags:
    - linux-ubuntu, gpu:nvidia
  variables:
    PETSC_CONFIG_OPTS: --with-cuda --with-openmp --download-mumps --download-scalapack --download-metis --download-parmetis
    PETSC_OPTIONS: -check_pointer_intensity 0 -error_output_stdout -nox -nox_warning -malloc_dump -use_gpu_aware_mpi 0
  allow_failure: true

clang-c:
  extends:
    - .stage-2
    - .linux_test
  tags:
    - linux-ubuntu
  variables:
    PETSC_CONFIG_OPTS: --with-cc=/usr/local/mpich-3.3.1-clang/bin/mpicc --with-cxx=0 --with-fc=0 --download-sowing
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --with-packages-download-dir=/var/local/downloads --download-primme --download-blopex

gnu-c-complex-multilib:
  extends:
    - .stage-2
    - .linux_test
  tags:
    - linux-ubuntu
  variables:
    PETSC_CONFIG_OPTS: --with-scalar-type=complex --with-single-library=0 --with-visibility=1 --with-fortran-bindings=0 --download-sowing --download-elemental --download-metis --download-parmetis

intel-c-complex-mkl:
  extends:
    - .stage-2
    - .linux_test
  tags:
    - linux-ubuntu, name:athor
  variables:
    MAKE_FFLAGS: ''
    PETSC_CONFIG_OPTS: --with-scalar-type=complex --with-cc=/usr/local/mpich-3.3.2-intel/bin/mpicc --with-fc=/usr/local/mpich-3.3.2-intel/bin/mpifort --with-cxx=0 --with-blaslapack-dir=/opt/intel/mkl/ --with-mkl_pardiso=1 --with-scalapack=1
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --with-packages-download-dir=/var/local/downloads --download-arpack --download-primme --download-blopex --with-feast=0

#
# The following tests run as part of stage-3.
#

gnu-c-complex:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - linux-debian
  variables:
    PETSC_CONFIG_OPTS: --with-scalar-type=complex
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --with-arpack-dir=/usr/local/opt/arpack-ng-3.7.0 --with-primme-dir=/usr/local/opt/primme-3.1.1 --with-blopex-dir=/usr/local/opt/blopex

gnu-cxx-int64:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - linux-debian
  variables:
    PETSC_CONFIG_OPTS: --with-clanguage=C++ --with-64-bit-indices --with-blaslapack-dir=/opt/intel/mkl/
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --with-primme-dir=/usr/local/opt/primme-2.2 --with-feast

gnu-c-single:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - linux-ubuntu
  variables:
    PETSC_CONFIG_OPTS: --with-precision=single --download-scalapack
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --with-arpack-dir=/usr/local/opt/arpack-ng-3.7.0

gnu-c:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - linux-debian
  variables:
    PETSC_CONFIG_OPTS: --download-superlu_dist --download-elemental --download-metis --download-parmetis
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --with-arpack-dir=/usr/local/opt/arpack-ng-3.7.0 --with-primme-dir=/usr/local/opt/primme-3.1.1 --with-blopex-dir=/usr/local/opt/blopex --with-blzpack-dir=/usr/local/opt/blzpack --with-trlan-dir=/usr/local/opt/trlan-201009

gnu-c-c99-nompi:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - linux-debian
  variables:
    PETSC_CONFIG_OPTS: --CFLAGS='-std=c99 -pedantic -Wno-long-long -Wno-overlength-strings' --with-fortran-bindings=0 --download-sowing --with-mpi=0
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --with-arpack-lib=/usr/local/opt/ARPACK/libparpack.a,/usr/local/opt/ARPACK/libarpack.a,-lgfortran,-lmpi_usempif08,-lmpi_usempi_ignore_tkr,-lmpi_mpifh,-lmpi --with-blopex-dir=/usr/local/opt/blopex --with-trlan-dir=/usr/local/opt/trlan-201009 --with-packages-download-dir=/var/local/downloads --download-primme --download-primme-cflags=-std=c99

gnu-c-debug:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - linux-ubuntu
  variables:
    PETSC_CONFIG_OPTS: --with-debugging=1 --CXXFLAGS='-O -g -std=c++11' --with-cxx-dialect=C++11
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --download-arpack --download-primme --download-trlan=https://codeforge.lbl.gov/frs/download.php/210/trlan-201009.tar.gz --download-blopex --download-hpddm

#

gnu-c-debug-complex:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - linux-ubuntu
  variables:
    PETSC_CONFIG_OPTS: --with-debugging=1 --with-scalar-type=complex
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --with-packages-download-dir=/var/local/downloads --download-primme --download-blopex --download-hpddm

gnu-c-cuda-complex:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - linux-ubuntu, gpu:nvidia
  variables:
    PETSC_CONFIG_OPTS: --with-scalar-type=complex --with-cuda --with-openmp
    PETSC_OPTIONS: -check_pointer_intensity 0 -error_output_stdout -nox -nox_warning -malloc_dump -use_gpu_aware_mpi 0
  allow_failure: true

gnu-c-cuda-single:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - linux-ubuntu, gpu:nvidia
  variables:
    PETSC_CONFIG_OPTS: --with-precision=single --with-single-library=0 --with-visibility=1 --with-cuda --with-openmp
    PETSC_OPTIONS: -check_pointer_intensity 0 -error_output_stdout -nox -nox_warning -malloc_dump -use_gpu_aware_mpi 0
  allow_failure: true

intel-c-complex-int64-mkl:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - linux-ubuntu, name:athor
  variables:
    MAKE_FFLAGS: ''
    PETSC_CONFIG_OPTS: --with-cc=/usr/local/mpich-3.3.2-intel/bin/mpicc --with-fc=/usr/local/mpich-3.3.2-intel/bin/mpifort --with-cxx=0 --with-blaslapack-dir=/opt/intel/mkl/ --with-mkl_pardiso=1 --with-scalar-type=complex --with-64-bit-indices --with-64-bit-blas-indices
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --download-primme=/var/local/downloads/primme-3.1.1.tar.gz

clang-c-valgrind:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - linux-ubuntu
  variables:
    PETSC_CONFIG_OPTS: --with-cc=/usr/local/mpich-3.3.1-clang/bin/mpicc --with-cxx=0 --with-fc=0 --with-shared-libraries=0 --download-sowing
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --with-slicot

gnu-c-float128:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - linux-ubuntu
  variables:
    PETSC_CONFIG_OPTS: --download-f2cblaslapack --with-precision=__float128
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local

pgi-c-nompi:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - linux-ubuntu, name:athor
  variables:
    MAKE_CFLAGS: ''
    MAKE_CXXFLAGS: ''
    MAKE_FFLAGS: ''
    PETSC_CONFIG_OPTS: --with-cc=/opt/pgi/linux86-64/2019/bin/pgcc --with-fc=/opt/pgi/linux86-64/2019/bin/pgfortran --with-cxx=/opt/pgi/linux86-64/2019/bin/pgc++ --with-blaslapack-dir=/opt/pgi/linux86-64/2019/lib --with-mpi=0
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local --with-packages-download-dir=/var/local/downloads --download-arpack --download-blopex --download-primme

intel-cxx-mkl:
  extends:
    - .stage-3
    - .linux_test
  tags:
    - linux-debian
  variables:
    MAKE_FFLAGS: ''
    PETSC_CONFIG_OPTS: --with-cc=/opt/mpich/3.3.2-intel/bin/mpicc --with-fc=/opt/mpich/3.3.2-intel/bin/mpifort --with-cxx=/opt/mpich/3.3.2-intel/bin/mpicxx --with-blaslapack-dir=/opt/intel/mkl/ --with-mkl_pardiso=1 --with-scalapack=1 --with-clanguage=C++
    SLEPC_CONFIG_OPTS: --DATAFILESPATH=/var/local

