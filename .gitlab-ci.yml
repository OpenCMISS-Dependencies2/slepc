#
# stage-1 take only a few minutes and generally run on the cloud; they do not run the full test suite or external packages.
#
# stage-2 runs on MCS systems and may take 10 to 15 minutes. They run the full test suite but with limited mixture of external packages
#
# stage-3 runs on MCS systems and may take an hour or more. They run the full test suite and heavily test external packages, utilize valgrind etc
#         (not yet implemented)
#
# The stage-(n) tests are only started if all of the stage-(n-1) tests run without error
#   You can limit the testing by using the variable STAGE with value 1 or 2
#
# By default the test branch is merged to master before testing. (not yet implemented)
#   You can limite this by using the variable MERGETOMASTER with value 0 (not yet implemented)
#

stages:
  - stage-1
  - stage-2
  - stage-3
variables:
  GIT_STRATEGY: fetch
  GIT_CLEAN_FLAGS: -ffdxq
  PETSC_OPTIONS: -check_pointer_intensity 0 -error_output_stdout -nox -nox_warning -malloc_dump
  TIMEOUT: 600

#
# The most basic template that most tests will expand upon. In particular merge requests and branch pushes DO NOT trigger testing
#

.test:
  only:
    refs:
#     Set with CI/CD Shedules - New Schedule
      - schedules
#     Set with CI/CD Pipelines - Run Pipeline
      - web
  dependencies: []

#
#  This provides the basic order of operations and options template for cloud based stage 1 tests.
#  Not all test-short need to follow this template but most will.
#

.stage-1:
  extends: .test
  stage: stage-1
  image: jedbrown/mpich-ccache
  tags:
    - docker
  before_script:
    - date
    - echo nproc=$(nproc)
    - cat /proc/cpuinfo
    - export CCACHE_COMPILERCHECK=content
    - export CCACHE_DIR=$(pwd)/.ccache
    - ccache --show-stats
    - ccache --zero-stats
    - echo PETSC_CONFIG_OPTS=$(PETSC_CONFIG_OPTS)
  script:
    - export SLEPC_DIR=$PWD
    - cd ..
    - git clone https://gitlab.com/petsc/petsc.git
    - cd petsc
    - export PETSC_DIR=$PWD
    - ${PYTHON} ./configure --with-debugging=0 COPTFLAGS='-O -march=native' CXXOPTFLAGS='-O -march=native' FOPTFLAGS='-O -march=native' ${PETSC_CONFIG_OPTS}
    - make CFLAGS=-Werror CXXFLAGS=-Werror
    - export PETSC_ARCH=`ls -d arch-*`
    - cd $SLEPC_DIR
    - ${PYTHON} ./configure
    - make CFLAGS=-Werror CXXFLAGS=-Werror
    - make CFLAGS=-Werror CXXFLAGS=-Werror allgtests-tap search="${TEST_SEARCH}" TIMEOUT=${TIMEOUT}
  after_script:
    - date
    - CCACHE_DIR=$(pwd)/.ccache ccache --show-stats
  artifacts:
    reports:
      junit: arch-*/tests/testresults.xml
    name: "$CI_JOB_NAME"
    when: always
    paths:
    - arch-*/lib/slepc/conf/*.log
    - arch-*/tests/testresults.xml
    - arch-*/tests/test_*_tap.log
    - arch-*/tests/test_*_err.log
    expire_in: 4 days
  cache:
    paths:
      - .ccache/
    key: "${CI_JOB_NAME}"

#
# The following tests run on the cloud as part of stage-1.
#

mpich-cxx-py3:
  extends: .stage-1
  variables:
    PYTHON: python3
    PETSC_CONFIG_OPTS: --with-mpi-dir=/usr/local --with-clanguage=cxx --with-fc=0
    TEST_SEARCH: eps_tests-test10_1

uni-complex-float-int64:
  extends: .stage-1
  variables:
    PYTHON: python3
    PETSC_CONFIG_OPTS: --with-mpi=0 --with-scalar-type=complex --with-precision=single --with-64-bit-indices
    TEST_SEARCH: pep_tests-test1_1

c89-mlib-static-py2:
  extends: .stage-1
  image: jedbrown/mpich-ccache:python2
  variables:
    PYTHON: python2
    PETSC_CONFIG_OPTS: --with-mpi-dir=/usr/local --with-single-library=0 --with-shared-libraries=0 CFLAGS=-std=c89
    TEST_SEARCH: sys_classes_bv_tests-test2_1

checksource:
  extends: .test
  image: jedbrown/mpich-ccache
  stage: stage-1
  script:
    - export SLEPC_DIR=$PWD
    - cd ..
    - git clone https://gitlab.com/petsc/petsc.git
    - cd petsc
    - export PETSC_DIR=$PWD
    - python3 ./configure --with-mpi=0 --with-fc=0 --with-cxx=0
    - make
    - export PETSC_ARCH=`ls -d arch-*`
    - cd $SLEPC_DIR
    - python3 ./configure
    - make checkbadSource SHELL=bash
    - make check_output SHELL=bash

#
# This provides the basic order of operations and options template for stage-2,3 tests.
# Not all stage-2,3 need to follow this template, but most will.
#
.stage-23:
  extends: .test
  script:
    - printf "PATH:$PATH\n"
    - printf "PETSC_OPTIONS:$PETSC_OPTIONS\n"
    - printf "PETSC_CONFIG_OPTS=${PETSC_CONFIG_OPTS}"
    - printf "SLEPC_CONFIG_OPTS=${SLEPC_CONFIG_OPTS}"
    - export SLEPC_DIR=$PWD
    - cd ..
    - git clone https://gitlab.com/petsc/petsc.git
    - cd petsc
    - export PETSC_DIR=$PWD
    - ${PYTHON} ./configure ${PETSC_CONFIG_OPTS}
    - make CFLAGS=${MAKE_CFLAGS} CXXFLAGS=${MAKE_CXXFLAGS}
    - export PETSC_ARCH=`ls -d arch-*`
    - cd $SLEPC_DIR
    - ${PYTHON} ./configure ${SLEPC_CONFIG_OPTS}
    - make CFLAGS=${MAKE_CFLAGS} CXXFLAGS=${MAKE_CXXFLAGS}
    - make CFLAGS=${MAKE_CFLAGS} CXXFLAGS=${MAKE_CXXFLAGS} check
    - make CFLAGS=${MAKE_CFLAGS} CXXFLAGS=${MAKE_CXXFLAGS} cleantest allgtests-tap TIMEOUT=${TIMEOUT}
  artifacts:
    reports:
      junit: arch-*/tests/testresults.xml
    name: "$CI_JOB_NAME"
    when: always
    paths:
    - arch-*/lib/slepc/conf/*.log
    - arch-*/tests/testresults.xml
    - arch-*/tests/test_*_tap.log
    - arch-*/tests/test_*_err.log
    expire_in: 4 days
  variables:
    OPENBLAS_NUM_THREADS: 1

.stage-2:
  extends: .stage-23
  stage: stage-2
  only:
    variables:
      - $STAGE != "1"
      - $STAGE != "3"

.stage-3:
  extends: .stage-23
  stage: stage-3
  only:
    variables:
      - $STAGE != "1"
      - $STAGE != "2"

#
# The following provide templates for various OSes for pre/post info
#

.linux_test_noflags:
  before_script:
    - date
    - hostname
    - grep PRETTY_NAME /etc/os-release
    - echo $(nproc)
    - ccache --zero-stats
  after_script:
    - date
    - ccache --show-stats

.linux_test:
  extends: .linux_test_noflags
  variables:
    MAKE_CFLAGS: -Werror
    MAKE_CXXFLAGS: -Werror

.freebsd_test:
  variables:
    MAKE_CFLAGS: -Werror
    MAKE_CXXFLAGS: -Werror
  before_script:
    - date
    - hostname
    - freebsd-version
    - echo $(sysctl -n hw.ncpu)
    - ccache --zero-stats
  after_script:
    - date
    - ccache --show-stats

.osx_test:
  variables:
    MAKE_CFLAGS: -Werror
    MAKE_CXXFLAGS: -Werror
  before_script:
    - date
    - hostname
    - sw_vers -productVersion
    - echo $(sysctl -n hw.ncpu)
    - ccache --zero-stats
  after_script:
    - date
    - ccache --show-stats

.opensolaris_test:
  before_script:
    - date
    - hostname
    - uname -a
    - echo $(nproc)
  after_script:
    - date

.mswin_test:
  before_script:
    - date
    - hostname
    - uname -a
    - echo $(nproc)
  after_script:
    - date

#
# The following tests run as part of stage-2.
#
# The tags variable used in the tests below connects the particular test with the runners
# listed on the left hand side of https://gitlab.com/petsc/petsc/-/settings/ci_cd.
# For example the test linux-gcc-complex-opt  any runner that has the tag 'name:pj02'
# (in a blue box beneath it)
#

linux-gcc-complex-opt:
  extends:
    - .stage-2
    - .linux_test
  tags:
    - linux-ubuntu
  variables:
    PETSC_CONFIG_OPTS: --with-debugging=0 --with-scalar-type=complex
    SLEPC_CONFIG_OPTS: --download-blopex

